# -*- coding: utf-8 -*-
"""Twitter_Stock_Market_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WZUvpE9vOEu2dJvw6McVKsScizLzkCX5
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#TASK 1
#Read Data and give first 100 records
df=pd.read_excel("/content/TWTR.xlsx")

df.head(100)

#Columns Insights
df.info()
df.columns

#Check null values and if it is remove them
df.isnull().sum()

#Removing Null Values
df.dropna(inplace=True)

df.isnull().sum()

#Find the statistical description of the data
df.describe()

#Finding Missing Values in Data
df.isnull().sum()

#TASK 2
#Give the Z-test O/R T-test over High, low, and close columns and see if the null hypothesis gets rejected or accepted
from scipy import stats

# Select numeric columns
numeric_columns = df.select_dtypes(include=["int", "float"]).columns[1:4]

# Apply zscore to numeric columns
z = df[numeric_columns].apply(lambda x: np.abs(stats.zscore(x)))

# Print the z-scores
print(z)

#By using ANOVA find the Fvalue and Pvalue from the data and see its Acceptance and rejection of the Null hypothesis.
from scipy.stats import f_oneway

# Extract the data from each DataFrame
data = [df[group].values for group in groups]

# Perform the ANOVA
f_value, p_value = f_oneway(*data)

print(f'F-value: {f_value:.2f}')
print(f'P-value: {p_value:.4f}')

alpha = 0.05
if p_value <= alpha:
    print('Reject the null hypothesis')
else:
    print('Fail to reject the null hypothesis')

#Calculate Z_Score using Gaussian Distribution Method
import math

def calculate_std_dev(data):
    n = len(df)
    mean = sum(df) / n
    variance = sum((x - mean) ** 2 for x in data) / n
    std_dev = math.sqrt(variance)
    return std_dev
(data)

#TASK 3
#Twitter Prices over the Years
plt.figure(figsize=(20,20))
sns.barplot(df,x='Date',y="Adj Close")
plt.title("Twitter Prices over the Years")
plt.xlabel("Date")
plt.ylabel("Adj Close")
plt.show()

#Conclusion
#------>Twitter Prices Increased in next year 2014

#compare the close vs date column for Twitter prices over the years.
plt.figure(figsize=(10,10))
sns.barplot(df,x='Date',y="Close")
plt.title("Twitter Prices over the Years")
plt.xlabel("Date")
plt.ylabel("Close")
plt.show()

#Assign buttons to control time periods. Add the  buttons to analyze the stock prices of Twitter in different time periods
import pandas as pd
import plotly.express as px

# assume you have a dataframe 'df' with Twitter stock prices

figure = px.bar(df, x="Date", y="Close", color="Close")
figure.update_xaxes(rangeslider_visible=True)
figure.update_layout(title="Twitter Stock Prices Over the Years",
                      xaxis_rangeslider_visible=False)
figure.update_xaxes(
    rangeselector=dict(
        buttons=list([
            dict(count=1, label="1m", step="month", stepmode="backward"),
            dict(count=6, label="6m", step="month", stepmode="backward"),
            dict(count=3, label="3m", step="month", stepmode="backward"),
            dict(count=1, label="1y", step="year", stepmode="backward"),
            dict(count=2, label="2y", step="year", stepmode="backward"),
            dict(step="all")
        ])
    )
)
figure.show()

#The complete timeline of Twitter in the stock market
import matplotlib.pyplot as plt
x = df['Date']
y = df['Volume']

# Create the figure and axis
fig, ax = plt.subplots()

# Plot the line graph
ax.plot(x, y, label='Line Graph', color='red', linestyle='--', marker='o')

# Add grid lines
ax.grid(True)

# Add legend
ax.legend()

# Set the title and labels
ax.set_title('Line Graph Example')
ax.set_xlabel("Date")
ax.set_ylabel("Volume")

# Show the plot
plt.show()

#Box Plot

sns.boxplot(data=[df['Volume'], df['Open'],df["Close"]])
plt.xlabel('Columns')
plt.ylabel('Values')
plt.title('Box Plot of Three Columns')
plt.show()

#Analysis
#-----It is showing that volume of Twitter has crosssed the upper limit and also indicating its opening and closing price.

pip install wordcloud

from wordcloud import WordCloud

df["Volume"]=df["Volume"].astype(str)

#Wordcloud
hash=" ".join(df["Volume"].tolist())
wordcloud=WordCloud(background_color="black",min_font_size=10).generate("Volume")
plt.figure(figsize=(15,8))
plt.imshow(wordcloud)
plt.axis("on")
plt.show()

#Creating a Dashboard
import matplotlib.pyplot as plt
import seaborn as sns

# Create a figure and axis
fig, ax = plt.subplots(2, 2, figsize=(12, 8))

# Plot some data
ax[0, 1].bar([1, 2, 3, 4, 5], [10, 20, 30, 40, 50])


# Set titles and labels

ax[0,1].set_title('Bar Chart')


# Show the plot
plt.show()

#FINAL TASK
# SUMMARY CONCLUSION
#*In this we have analysed Twitter Price changes over different years in various aspects using different visualisations on different basis.













